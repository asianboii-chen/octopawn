{"version":3,"sources":["components/Background.js","data/white-pawn.svg","data/black-pawn.svg","data/white-queen.svg","data/black-queen.svg","components/Piece.js","components/Square.js","components/Board.js","components/SettingItem.js","components/Settings.js","components/App.js","reportWebVitals.js","index.js"],"names":["Background","props","squares","y","x","classes","push","className","join","isLightTheme","Piece","src","IMAGE","this","image","alt","Component","p","whitePawn","P","blackPawn","q","whiteQueen","Q","blackQueen","Square","isLight","isHighlighted","isLegal","onClick","handleClick","piece","yText","xText","Board","state","squarePieces","Array","BOARD_SIZE","fill","isWhiteOnMove","selectedSquareId","onMove","_handleSquareClick","id","setSource","setTarget","getSquareCoords","name","getSquareName","isSquareLight","highlightedSquares","indexOf","isMoveLegal","isPieceWhite","showCoords","BOARD_WIDTH","setState","sourceId","getNewSquarePieces","Math","floor","String","fromCharCode","BOARD_HEIGHT","toLowerCase","targetId","sourceY","sourceX","targetY","targetX","source","target","pow","abs","res","concat","nextProps","currState","INIT_SQUARE_PIECES","SettingItem","offClasses","isOffLight","value","onClasses","style","display","width","height","title","onChange","offText","onText","Settings","isShowingCoords","onIsShowingCoordsChange","onIsLightThemeChange","App","_handleIsLightThemeChange","_handleIsShowingCoordsChange","_handleMove","sourceSquareId","targetSquareId","newSquarePieces","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c69c2db.chunk.js","sourcesContent":["import './Background.css';\r\n\r\nfunction Background(props) {\r\n  let squares = [];\r\n  for (let y = 0; y < 48; y++) {\r\n    for (let x = 0; x < 48; x++) {\r\n      const classes = ['Background-square', y % 2 === x % 2 ? 'light' : 'dark'];\r\n      squares.push(\r\n        <rect\r\n          key={`square-${y}-${x}`}\r\n          className={classes.join(' ')}\r\n          x={12.5 * x + 'vmin'}\r\n          y={12.5 * y + 'vmin'}\r\n        ></rect>\r\n      );\r\n    }\r\n  }\r\n  const classes = ['Background', props.isLightTheme ? 'light' : 'dark'];\r\n  return <svg className={classes.join(' ')}>{squares}</svg>;\r\n}\r\n\r\nexport default Background;\r\n","export default __webpack_public_path__ + \"static/media/white-pawn.7fbab4ab.svg\";","export default __webpack_public_path__ + \"static/media/black-pawn.65485e34.svg\";","export default __webpack_public_path__ + \"static/media/white-queen.e195644e.svg\";","export default __webpack_public_path__ + \"static/media/black-queen.310fe3e2.svg\";","import { Component } from 'react';\r\nimport './Piece.css';\r\nimport whitePawn from '../data/white-pawn.svg';\r\nimport blackPawn from '../data/black-pawn.svg';\r\nimport whiteQueen from '../data/white-queen.svg';\r\nimport blackQueen from '../data/black-queen.svg';\r\n\r\nclass Piece extends Component {\r\n  static IMAGE = {\r\n    p: whitePawn,\r\n    P: blackPawn,\r\n    q: whiteQueen,\r\n    Q: blackQueen,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <img src={Piece.IMAGE[this.props.image]} className='Piece' alt='piece' />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Piece;\r\n","import Piece from './Piece.js';\r\nimport './Square.css';\r\n\r\nfunction Square(props) {\r\n  const classes = [\r\n    'Square',\r\n    props.isLight ? 'light' : 'dark',\r\n    props.isHighlighted ? 'highlighted' : 'normal',\r\n    props.isLegal ? 'legal' : 'illegal',\r\n  ];\r\n  return (\r\n    <div className={classes.join(' ')} onClick={props.handleClick}>\r\n      {props.piece && (\r\n        <div className='Square-piece'>\r\n          <Piece image={props.piece} />\r\n        </div>\r\n      )}\r\n      {props.yText && <div className='Square-y-label'>{props.yText}</div>}\r\n      {props.xText && <div className='Square-x-label'>{props.xText}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n","import { Component } from 'react';\r\nimport Square from './Square';\r\nimport './Board.css';\r\n\r\nclass Board extends Component {\r\n  static BOARD_HEIGHT = 4;\r\n  static BOARD_WIDTH = 4;\r\n  static BOARD_SIZE = Board.BOARD_WIDTH * Board.BOARD_HEIGHT;\r\n  static INIT_SQUARE_PIECES = [\r\n    'P',\r\n    'P',\r\n    'P',\r\n    'P',\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    null,\r\n    'p',\r\n    'p',\r\n    'p',\r\n    'p',\r\n  ];\r\n\r\n  static getSquareCoords(id) {\r\n    const y = Math.floor(id / Board.BOARD_WIDTH);\r\n    const x = id % Board.BOARD_WIDTH;\r\n    return [y, x];\r\n  }\r\n\r\n  static isSquareLight(id) {\r\n    const [y, x] = Board.getSquareCoords(id);\r\n    return y % 2 === x % 2;\r\n  }\r\n\r\n  static getSquareName(id) {\r\n    const [y, x] = Board.getSquareCoords(id);\r\n    return String.fromCharCode(97 + x) + (Board.BOARD_HEIGHT - y);\r\n  }\r\n\r\n  static isPieceWhite(piece) {\r\n    return piece.toLowerCase() === piece;\r\n  }\r\n\r\n  static isMoveLegal(squarePieces, sourceId, targetId) {\r\n    if (\r\n      sourceId < 0 ||\r\n      sourceId >= Board.BOARD_SIZE ||\r\n      !squarePieces[sourceId] ||\r\n      targetId < 0 ||\r\n      targetId >= Board.BOARD_SIZE\r\n    )\r\n      return false;\r\n    const [sourceY, sourceX] = Board.getSquareCoords(sourceId);\r\n    const [targetY, targetX] = Board.getSquareCoords(targetId);\r\n    const source = squarePieces[sourceId];\r\n    const target = squarePieces[targetId];\r\n    if (targetY !== sourceY + Math.pow(-1, Board.isPieceWhite(source)))\r\n      // pawns move one rank only\r\n      return false;\r\n    if (Math.abs(sourceX - targetX) === 1)\r\n      // capture\r\n      return (\r\n        !!target && Board.isPieceWhite(source) !== Board.isPieceWhite(target)\r\n      );\r\n    // normal advance\r\n    return sourceX === targetX && !target;\r\n  }\r\n\r\n  static getNewSquarePieces(squarePieces, sourceId, targetId) {\r\n    let res = squarePieces.concat();\r\n    const targetY = Board.getSquareCoords(targetId)[0];\r\n    if (targetY === 0) res[targetId] = 'q';\r\n    else if (targetY === Board.BOARD_HEIGHT - 1) res[targetId] = 'Q';\r\n    else res[targetId] = res[sourceId];\r\n    res[sourceId] = null;\r\n    return res;\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, currState) {\r\n    if (nextProps.squarePieces === currState.squarePieces) return null;\r\n    // new move; clear selections\r\n    return {\r\n      squarePieces: nextProps.squarePieces,\r\n      isWhiteOnMove: nextProps.isWhiteOnMove,\r\n      selectedSquareId: -1,\r\n    };\r\n  }\r\n\r\n  state = {\r\n    squarePieces: new Array(Board.BOARD_SIZE).fill(null),\r\n    isWhiteOnMove: true,\r\n    selectedSquareId: -1,\r\n  };\r\n\r\n  onMove = this.props.onMove;\r\n\r\n  render() {\r\n    let squares = [];\r\n    for (let id = 0; id < Board.BOARD_SIZE; id++) {\r\n      const [y, x] = Board.getSquareCoords(id);\r\n      const name = Board.getSquareName(id);\r\n      squares.push(\r\n        <Square\r\n          key={'square-' + id}\r\n          piece={this.state.squarePieces[id]}\r\n          isLight={Board.isSquareLight(id)}\r\n          isHighlighted={\r\n            id === this.state.selectedSquareId ||\r\n            this.props.highlightedSquares.indexOf(id) >= 0\r\n          }\r\n          isLegal={\r\n            (this.state.selectedSquareId >= 0 &&\r\n              Board.isMoveLegal(\r\n                this.state.squarePieces,\r\n                this.state.selectedSquareId,\r\n                id\r\n              )) ||\r\n            (!!this.state.squarePieces[id] &&\r\n              Board.isPieceWhite(this.state.squarePieces[id]) ===\r\n                this.state.isWhiteOnMove)\r\n          }\r\n          yText={this.props.showCoords && x === 0 && name[1]}\r\n          xText={\r\n            this.props.showCoords && y === Board.BOARD_WIDTH - 1 && name[0]\r\n          }\r\n          handleClick={() => this._handleSquareClick(id)}\r\n        />\r\n      );\r\n      if (x === Board.BOARD_WIDTH - 1) squares.push(<br key={'rank-' + y} />);\r\n    }\r\n    const classes = ['Board', this.props.isLightTheme ? 'light' : 'dark'];\r\n    return <div className={classes.join(' ')}>{squares}</div>;\r\n  }\r\n\r\n  _handleSquareClick = (id) => {\r\n    if (this.state.selectedSquareId === -1) this.setSource(id);\r\n    else this.setTarget(id);\r\n  };\r\n\r\n  setSource(id) {\r\n    if (\r\n      !this.state.squarePieces[id] ||\r\n      Board.isPieceWhite(this.state.squarePieces[id]) !==\r\n        this.state.isWhiteOnMove\r\n    )\r\n      return;\r\n    this.setState({ selectedSquareId: id });\r\n  }\r\n\r\n  setTarget(id) {\r\n    const sourceId = this.state.selectedSquareId;\r\n    if (id === sourceId) {\r\n      this.setState({ selectedSquareId: -1 });\r\n      return;\r\n    }\r\n    if (\r\n      this.state.squarePieces[id] &&\r\n      Board.isPieceWhite(this.state.squarePieces[id]) ===\r\n        this.state.isWhiteOnMove\r\n    ) {\r\n      this.setState({ selectedSquareId: id });\r\n      return;\r\n    }\r\n    if (!Board.isMoveLegal(this.state.squarePieces, sourceId, id)) {\r\n      this.setState({ selectedSquareId: -1 });\r\n      return;\r\n    }\r\n    this.onMove(\r\n      sourceId,\r\n      id,\r\n      Board.getNewSquarePieces(this.state.squarePieces, sourceId, id)\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import './SettingItem.css';\r\n\r\nfunction SettingItem(props) {\r\n  const offClasses = [\r\n    'SettingItem-option',\r\n    props.isOffLight ? 'light' : 'dark',\r\n    props.value ? 'inactive' : 'active',\r\n  ];\r\n  const onClasses = [\r\n    'SettingItem-option',\r\n    props.isOffLight ? 'dark' : 'light',\r\n    props.value ? 'active' : 'inactive',\r\n  ];\r\n  return (\r\n    <div className='SettingItem'>\r\n      <div style={{ display: 'table', width: '100%', height: '100%' }}>\r\n        <div className='SettingItem-title'>{props.title}</div>\r\n        <div\r\n          className={offClasses.join(' ')}\r\n          onClick={() => props.onChange(!props.value)}\r\n        >\r\n          {props.offText}\r\n        </div>\r\n        <div\r\n          className={onClasses.join(' ')}\r\n          onClick={() => props.onChange(!props.value)}\r\n        >\r\n          {props.onText}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SettingItem;\r\n","import SettingItem from './SettingItem';\r\nimport './Settings.css';\r\n\r\nfunction Settings(props) {\r\n  const classes = ['Settings', props.isLightTheme ? 'light' : 'dark'];\r\n  return (\r\n    <div className={classes.join(' ')}>\r\n      <div className='Settings-title'>SETTINGS</div>\r\n      <SettingItem\r\n        title='Coordinates'\r\n        isOffLight={false}\r\n        offText='Hide'\r\n        onText='Show'\r\n        value={props.isShowingCoords}\r\n        onChange={props.onIsShowingCoordsChange}\r\n      />\r\n      <SettingItem\r\n        title='Color Theme'\r\n        isOffLight={false}\r\n        offText='Dark'\r\n        onText='Light'\r\n        value={props.isLightTheme}\r\n        onChange={props.onIsLightThemeChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n","import { Component } from 'react';\r\nimport Background from './Background';\r\nimport Board from './Board';\r\nimport Settings from './Settings';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    isLightTheme: false,\r\n    isShowingCoords: true,\r\n    squarePieces: Board.INIT_SQUARE_PIECES.concat(),\r\n    isWhiteOnMove: true,\r\n    highlightedSquares: [],\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        <Background isLightTheme={this.state.isLightTheme} />\r\n        <Board\r\n          isLightTheme={this.state.isLightTheme}\r\n          showCoords={this.state.isShowingCoords}\r\n          squarePieces={this.state.squarePieces}\r\n          isWhiteOnMove={this.state.isWhiteOnMove}\r\n          highlightedSquares={this.state.highlightedSquares}\r\n          onMove={this._handleMove}\r\n        />\r\n        <Settings\r\n          isLightTheme={this.state.isLightTheme}\r\n          isShowingCoords={this.state.isShowingCoords}\r\n          onIsLightThemeChange={this._handleIsLightThemeChange}\r\n          onIsShowingCoordsChange={this._handleIsShowingCoordsChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  _handleIsLightThemeChange = (value) => {\r\n    this.setState({ isLightTheme: value });\r\n  };\r\n\r\n  _handleIsShowingCoordsChange = (value) => {\r\n    this.setState({ isShowingCoords: value });\r\n  };\r\n\r\n  _handleMove = (sourceSquareId, targetSquareId, newSquarePieces) => {\r\n    console.log(\r\n      this.state.isWhiteOnMove ? 'White plays' : 'Black plays',\r\n      `${Board.getSquareName(sourceSquareId)}-${Board.getSquareName(\r\n        targetSquareId\r\n      )}`\r\n    );\r\n    this.setState((currState) => ({\r\n      squarePieces: newSquarePieces,\r\n      isWhiteOnMove: !currState.isWhiteOnMove,\r\n      highlightedSquares: [sourceSquareId, targetSquareId],\r\n    }));\r\n  };\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}